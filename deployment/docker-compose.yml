version: '3.8'

services:
#  nginx:
#    build:
#      context: ../
#      dockerfile: nginx/Dockerfile
#    ports:
#      - 80:80
#      - 443:443
#    volumes:
#      - static_volume:/home/app/static
#      - media_volume:/home/app/media
#      - ./data/certbot/conf:/etc/letsencrypt
#      - ./data/certbot/www:/var/www/certbot
#    environment:
#      - DOMAIN_NAME=$DOMAIN_NAME
#    depends_on:
#      - app
#    restart: on-failure
#    links:
#      - app:app

#  certbot:
#    image: certbot/certbot
#    restart: on-failure
#    volumes:
#      - ./data/certbot/conf:/etc/letsencrypt
#      - ./data/certbot/www:/var/www/certbot
#    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  app:
    build:
      context: ../
      dockerfile: deployment/Dockerfile
    restart: always
    command: sh -c "python manage.py migrate --noinput &&
             python manage.py collectstatic --noinput &&
             gunicorn -w 3 core.wsgi:application --bind 0.0.0.0:8000"
    links:
      - postgres:postgres
#      - redis:redis
    volumes:
      - static_volume:/home/app/static
      - media_volume:/home/media
    expose:
      - 8000
    ports:
      - "8000:8000"
    environment:
      - DEBUG=$DEBUG
      - SECRET_KEY=$SECRET_KEY
      - POSTGRES_DB=$POSTGRES_DB
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_HOST=$POSTGRES_HOST
      - POSTGRES_PORT=$POSTGRES_PORT
#      - REDIS_PORT=$REDIS_PORT
#      - REDIS_HOST=$REDIS_HOST
#      - DOMAIN_NAME=$DOMAIN_NAME
#      - SENTRY_SDK=$SENTRY_SDK
    depends_on:
      - postgres
#      - redis

  postgres:
    image: postgis/postgis:13-3.1-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    expose:
      - $POSTGRES_PORT
    environment:
      - POSTGRES_DB=$POSTGRES_DB
      - PGPORT=$POSTGRES_PORT
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
    restart: on-failure

#  redis:
#    restart: always
#    image: redis:6.2.4-alpine
#    expose:
#      - $REDIS_PORT
#    volumes:
#    - redis_volume:/data

#  celery:
#    build: ./app
#    command: celery -A core worker -l info
#    volumes:
#      - ./app/:/usr/src/app/
#    environment:
#      - DJANGO_SECRET_KEY=$DJANGO_SECRET_KEY
#      - POSTGRES_DB=$POSTGRES_DB
#      - POSTGRES_USER=$POSTGRES_USER
#      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
#      - POSTGRES_HOST=$POSTGRES_HOST
#      - POSTGRES_PORT=$POSTGRES_PORT
#      - REDIS_PORT=$REDIS_PORT
#      - REDIS_HOST=$REDIS_HOST
#      - DOMAIN_NAME=$DOMAIN_NAME
#      - SENTRY_SDK=$SENTRY_SDK
#    depends_on:
#      - redis
#
#  celery-beat:
#    build: ./app
#    command: celery -A core beat -l info
#    volumes:
#      - ./app/:/usr/src/app/
#    environment:
#      - DJANGO_SECRET_KEY=$DJANGO_SECRET_KEY
#      - POSTGRES_DB=$POSTGRES_DB
#      - POSTGRES_USER=$POSTGRES_USER
#      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
#      - POSTGRES_HOST=$POSTGRES_HOST
#      - POSTGRES_PORT=$POSTGRES_PORT
#      - REDIS_PORT=$REDIS_PORT
#      - REDIS_HOST=$REDIS_HOST
#      - DOMAIN_NAME=$DOMAIN_NAME
#      - SENTRY_SDK=$SENTRY_SDK
#    depends_on:
#      - redis


volumes:
  postgres_data:
  static_volume:
  media_volume:
#  redis_volume:
